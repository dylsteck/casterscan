/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UsernamesUsernameRouteImport } from './routes/usernames/$username'
import { Route as FidsFidRouteImport } from './routes/fids/$fid'
import { Route as EventsIdRouteImport } from './routes/events/$id'
import { Route as CastsHashRouteImport } from './routes/casts/$hash'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UsernamesUsernameRoute = UsernamesUsernameRouteImport.update({
  id: '/usernames/$username',
  path: '/usernames/$username',
  getParentRoute: () => rootRouteImport,
} as any)
const FidsFidRoute = FidsFidRouteImport.update({
  id: '/fids/$fid',
  path: '/fids/$fid',
  getParentRoute: () => rootRouteImport,
} as any)
const EventsIdRoute = EventsIdRouteImport.update({
  id: '/events/$id',
  path: '/events/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const CastsHashRoute = CastsHashRouteImport.update({
  id: '/casts/$hash',
  path: '/casts/$hash',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/casts/$hash': typeof CastsHashRoute
  '/events/$id': typeof EventsIdRoute
  '/fids/$fid': typeof FidsFidRoute
  '/usernames/$username': typeof UsernamesUsernameRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/casts/$hash': typeof CastsHashRoute
  '/events/$id': typeof EventsIdRoute
  '/fids/$fid': typeof FidsFidRoute
  '/usernames/$username': typeof UsernamesUsernameRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/casts/$hash': typeof CastsHashRoute
  '/events/$id': typeof EventsIdRoute
  '/fids/$fid': typeof FidsFidRoute
  '/usernames/$username': typeof UsernamesUsernameRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/casts/$hash'
    | '/events/$id'
    | '/fids/$fid'
    | '/usernames/$username'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/casts/$hash'
    | '/events/$id'
    | '/fids/$fid'
    | '/usernames/$username'
  id:
    | '__root__'
    | '/'
    | '/casts/$hash'
    | '/events/$id'
    | '/fids/$fid'
    | '/usernames/$username'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CastsHashRoute: typeof CastsHashRoute
  EventsIdRoute: typeof EventsIdRoute
  FidsFidRoute: typeof FidsFidRoute
  UsernamesUsernameRoute: typeof UsernamesUsernameRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/usernames/$username': {
      id: '/usernames/$username'
      path: '/usernames/$username'
      fullPath: '/usernames/$username'
      preLoaderRoute: typeof UsernamesUsernameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/fids/$fid': {
      id: '/fids/$fid'
      path: '/fids/$fid'
      fullPath: '/fids/$fid'
      preLoaderRoute: typeof FidsFidRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/events/$id': {
      id: '/events/$id'
      path: '/events/$id'
      fullPath: '/events/$id'
      preLoaderRoute: typeof EventsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/casts/$hash': {
      id: '/casts/$hash'
      path: '/casts/$hash'
      fullPath: '/casts/$hash'
      preLoaderRoute: typeof CastsHashRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CastsHashRoute: CastsHashRoute,
  EventsIdRoute: EventsIdRoute,
  FidsFidRoute: FidsFidRoute,
  UsernamesUsernameRoute: UsernamesUsernameRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
